name: Java CI/CD with Gradle

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
      
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'


    - name: make application.properties
      run: |
        cd ./src/main/resources
        touch ./application.yml
        echo "${{ secrets.APPLICATION }}" > ./application.yml
      shell: bash
      
    - name: Download keystore.p12
      run: |
        cd ./src/main/resources
        touch ./keystore.p12
        echo "${{ secrets.KEYSTORE }}" | base64 -d > ./keystore.p12
      shell: bash 
        
    - name: google application credentials
      run: |
        cd ./src/main/resources
        touch ./credentials.json
        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS}}" > ./credentials.json
      shell: bash 
      
    - name: Set up environment
      run: |
        cd ./src/main/resources
        echo "GOOGLE_APPLICATION_CREDENTIALS=./credentials.json" >> $GITHUB_ENV
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ./credentials.json
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build 

  deploy-to-Server:
    if: github.event_name == 'push'    
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash
      - name: Download keystore.p12
        run: |
          cd ./src/main/resources
          touch ./keystore.p12
          echo "${{ secrets.KEYSTORE }}" | base64 -d > ./keystore.p12      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build 

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t app .
          docker tag app ${{ secrets.DOCKER_USERNAME }}/hearo:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/hearo:latest    
      - name: Deploy start      
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          # 도커 작업
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/hearo:latest
            docker stop $(docker ps -a -q)
            docker run -d --log-driver=syslog -p 8080:8080 \
            -e GOOGLE_APPLICATION_CREDENTIALS="${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" \
              ${{ secrets.DOCKER_USERNAME }}/hearo:latest
            docker rm $(docker ps --filter 'status=exited' -a -q)
            docker image prune -a -f
            
            
